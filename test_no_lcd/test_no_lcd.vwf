/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("50Mhz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Address_SRAM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 18;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Address_SRAM[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("Address_SRAM[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address_SRAM";
}

SIGNAL("CS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Data_SRAM")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("Data_SRAM[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("Data_SRAM[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "Data_SRAM";
}

SIGNAL("LED")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LED[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("LED[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LED";
}

SIGNAL("OE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Switches")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 18;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Switches[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("Switches[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Switches";
}

SIGNAL("WE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sram_control:inst2|state")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
}

SIGNAL("pattern_gen:inst|clock_500Khz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("pattern_gen:inst|pattern")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("pattern_gen:inst|pattern[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|pattern[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "pattern_gen:inst|pattern";
}

SIGNAL("pattern_gen:inst|state")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
}

SIGNAL("pattern_gen:inst|write_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("sram_control:inst2|write_data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "";
}

TRANSITION_LIST("50Mhz")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 25000;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("Address_SRAM[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Address_SRAM[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("CS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Data_SRAM[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 78400.0;
	}
}

TRANSITION_LIST("Data_SRAM[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 78400.0;
	}
}

TRANSITION_LIST("Data_SRAM[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 78400.0;
	}
}

TRANSITION_LIST("Data_SRAM[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 78400.0;
	}
}

TRANSITION_LIST("Data_SRAM[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 78400.0;
	}
}

TRANSITION_LIST("Data_SRAM[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 78400.0;
	}
}

TRANSITION_LIST("Data_SRAM[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 78400.0;
	}
}

TRANSITION_LIST("Data_SRAM[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 78400.0;
	}
}

TRANSITION_LIST("Data_SRAM[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 57920.0;
	}
}

TRANSITION_LIST("Data_SRAM[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 57920.0;
	}
}

TRANSITION_LIST("Data_SRAM[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 40960.0;
		LEVEL 1 FOR 37440.0;
	}
}

TRANSITION_LIST("Data_SRAM[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 40960.0;
		LEVEL 1 FOR 37440.0;
	}
}

TRANSITION_LIST("Data_SRAM[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 78400.0;
	}
}

TRANSITION_LIST("Data_SRAM[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 78400.0;
	}
}

TRANSITION_LIST("Data_SRAM[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 40960.0;
		LEVEL 1 FOR 37440.0;
	}
}

TRANSITION_LIST("Data_SRAM[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 921600.0;
		LEVEL 0 FOR 20480.0;
		LEVEL 1 FOR 57920.0;
	}
}

TRANSITION_LIST("LED[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("LED[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("OE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("Reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("Start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 20480.0;
		LEVEL 1 FOR 959040.0;
	}
}

TRANSITION_LIST("Switches[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 140000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
	}
}

TRANSITION_LIST("Switches[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 100000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("Switches[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 100000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("Switches[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 120000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("Switches[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 100000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 80000.0;
	}
}

TRANSITION_LIST("Switches[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("Switches[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 240000.0;
		LEVEL 0 FOR 40000.0;
	}
}

TRANSITION_LIST("Switches[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 100000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
	}
}

TRANSITION_LIST("Switches[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
	}
}

TRANSITION_LIST("Switches[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 260000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("Switches[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
	}
}

TRANSITION_LIST("Switches[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 120000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 140000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 120000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("Switches[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
	}
}

TRANSITION_LIST("Switches[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 120000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 60000.0;
	}
}

TRANSITION_LIST("Switches[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 60000.0;
	}
}

TRANSITION_LIST("Switches[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 120000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 120000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 120000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
	}
}

TRANSITION_LIST("Switches[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 100000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 100000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
	}
}

TRANSITION_LIST("Switches[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
	}
}

TRANSITION_LIST("WE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000000.0;
	}
}

TRANSITION_LIST("sram_control:inst2|state")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|clock_500Khz")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|pattern[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|state")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("pattern_gen:inst|write_data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

TRANSITION_LIST("sram_control:inst2|write_data")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 1000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "50Mhz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "WE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Address_SRAM[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
	CHILDREN = 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Data_SRAM[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "LED";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
	CHILDREN = 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58;
}

DISPLAY_LINE
{
	CHANNEL = "LED[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "LED[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|write_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sram_control:inst2|write_data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Switches";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
	CHILDREN = 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "Switches[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "sram_control:inst2|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 80;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|clock_500Khz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 81;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 82;
	TREE_LEVEL = 0;
	CHILDREN = 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|pattern[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 82;
}

DISPLAY_LINE
{
	CHANNEL = "pattern_gen:inst|state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 99;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 11900;
	MASTER = TRUE;
}
;
